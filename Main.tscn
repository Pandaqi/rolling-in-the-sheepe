[gd_scene load_steps=37 format=2]

[ext_resource path="res://tileset_terrain.tres" type="TileSet" id=1]
[ext_resource path="res://scripts/slicer.gd" type="Script" id=2]
[ext_resource path="res://tileset.tres" type="TileSet" id=3]
[ext_resource path="res://scripts/camera.gd" type="Script" id=4]
[ext_resource path="res://scripts/map_generation.gd" type="Script" id=5]
[ext_resource path="res://scripts/main.gd" type="Script" id=6]
[ext_resource path="res://scripts/player_manager.gd" type="Script" id=7]
[ext_resource path="res://scripts/mask_painter.gd" type="Script" id=8]
[ext_resource path="res://scenes/feedback.tscn" type="PackedScene" id=9]
[ext_resource path="res://scripts/fog_of_war.gd" type="Script" id=10]
[ext_resource path="res://scripts/map/route_generator.gd" type="Script" id=11]
[ext_resource path="res://scripts/map/player_progression.gd" type="Script" id=12]
[ext_resource path="res://scripts/map/room_picker.gd" type="Script" id=13]
[ext_resource path="res://scripts/map/edges.gd" type="Script" id=14]
[ext_resource path="res://scripts/map/slope_painter.gd" type="Script" id=15]
[ext_resource path="res://scripts/map/terrain.gd" type="Script" id=16]
[ext_resource path="res://scripts/map/special_elements.gd" type="Script" id=17]
[ext_resource path="res://scenes/particles.tscn" type="PackedScene" id=18]
[ext_resource path="res://scripts/map/dynamic_tutorial.gd" type="Script" id=19]
[ext_resource path="res://scripts/solo_mode.gd" type="Script" id=20]
[ext_resource path="res://assets/ui/pause_menu.png" type="Texture" id=21]
[ext_resource path="res://scripts/pause_menu.gd" type="Script" id=22]
[ext_resource path="res://scripts/state.gd" type="Script" id=23]
[ext_resource path="res://scripts/game_over_loss_visuals.gd" type="Script" id=24]
[ext_resource path="res://assets/fonts/skranji_bold.ttf" type="DynamicFontData" id=25]
[ext_resource path="res://assets/ui/game_over_loss.png" type="Texture" id=26]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform sampler2D viewport_tex;

void fragment() {
	vec4 col = texture(viewport_tex, UV);
	vec4 mask = texture(TEXTURE, UV);
	
	col.a *= mask.a;
	col.rgb = mask.rgb;
	
	COLOR = col;
}"

[sub_resource type="ViewportTexture" id=3]
viewport_path = NodePath("Map/MaskPainter/TilemapTexture")

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/viewport_tex = SubResource( 3 )

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform vec4 base_color : hint_color;
uniform float base_alpha = 1.0;

uniform vec2 p0;
uniform vec2 p1;
uniform vec2 p2;
uniform vec2 p3;
uniform vec2 p4;
uniform vec2 p5;
uniform vec2 p6;
uniform vec2 p7;
uniform vec2 p8;
uniform vec2 p9;
uniform vec2 p10;
uniform vec2 p11;
uniform vec2 p12;
uniform vec2 p13;
uniform vec2 p14;
uniform vec2 p15;
uniform vec2 p16;
uniform vec2 p17;
uniform vec2 p18;
uniform vec2 p19;

uniform float sight_radius = 300;
uniform vec2 vp_size = vec2(1920.0, 1080.0);

void fragment() {
	vec4 col = base_color;
	vec2 pos = UV*vp_size;
	
	float alpha = base_alpha;
	alpha *= min(length(p0 - pos) / sight_radius, 1.0);
	alpha *= min(length(p1 - pos) / sight_radius, 1.0);
	alpha *= min(length(p2 - pos) / sight_radius, 1.0);
	alpha *= min(length(p3 - pos) / sight_radius, 1.0);
	alpha *= min(length(p4 - pos) / sight_radius, 1.0);
	alpha *= min(length(p5 - pos) / sight_radius, 1.0);
	alpha *= min(length(p6 - pos) / sight_radius, 1.0);
	alpha *= min(length(p7 - pos) / sight_radius, 1.0);
	alpha *= min(length(p8 - pos) / sight_radius, 1.0);
	alpha *= min(length(p9 - pos) / sight_radius, 1.0);
	
	alpha *= min(length(p10 - pos) / sight_radius, 1.0);
	alpha *= min(length(p11 - pos) / sight_radius, 1.0);
	alpha *= min(length(p12 - pos) / sight_radius, 1.0);
	alpha *= min(length(p13 - pos) / sight_radius, 1.0);
	alpha *= min(length(p14 - pos) / sight_radius, 1.0);
	alpha *= min(length(p15 - pos) / sight_radius, 1.0);
	alpha *= min(length(p16 - pos) / sight_radius, 1.0);
	alpha *= min(length(p17 - pos) / sight_radius, 1.0);
	alpha *= min(length(p18 - pos) / sight_radius, 1.0);
	alpha *= min(length(p19 - pos) / sight_radius, 1.0);
	
	
	col.a = alpha;
	
	COLOR = col;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 10 )
shader_param/base_color = Color( 0.184314, 0.0352941, 0, 1 )
shader_param/base_alpha = 1.0
shader_param/p0 = null
shader_param/p1 = null
shader_param/p2 = Vector2( 500, 500 )
shader_param/p3 = null
shader_param/p4 = null
shader_param/p5 = null
shader_param/p6 = null
shader_param/p7 = null
shader_param/p8 = null
shader_param/p9 = null
shader_param/p10 = null
shader_param/p11 = null
shader_param/p12 = null
shader_param/p13 = null
shader_param/p14 = null
shader_param/p15 = null
shader_param/p16 = null
shader_param/p17 = null
shader_param/p18 = null
shader_param/p19 = null
shader_param/sight_radius = 300.0
shader_param/vp_size = Vector2( 1920, 1080 )

[sub_resource type="Animation" id=11]
resource_name = "MenuReveal"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Container:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ), Vector2( 1.2, 1.2 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Control/ColorRect:color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 0.47451 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Container:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 10.0, -10.0, 0.0 ]
}

[sub_resource type="Animation" id=12]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Container:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Control/ColorRect:color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Container:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="DynamicFont" id=15]
size = 17
outline_size = 2
outline_color = Color( 0.996078, 0.929412, 1, 1 )
font_data = ExtResource( 25 )

[sub_resource type="Animation" id=13]
resource_name = "MenuReveal"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Container:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ), Vector2( 1.2, 1.2 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Control/ColorRect:color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 0.47451 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Container:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 10.0, -10.0, 0.0 ]
}

[sub_resource type="Animation" id=14]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Container:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Control/ColorRect:color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Container:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[node name="Main" type="Node2D"]
script = ExtResource( 6 )

[node name="State" type="Node2D" parent="."]
script = ExtResource( 23 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 509.545, 302.492 )
current = true
limit_smoothed = true
script = ExtResource( 4 )

[node name="Map" type="Node2D" parent="."]
script = ExtResource( 5 )

[node name="Terrain" type="Node2D" parent="Map"]
script = ExtResource( 16 )

[node name="TileMapTerrain" type="TileMap" parent="Map/Terrain"]
tile_set = ExtResource( 1 )
format = 1

[node name="TileMap" type="TileMap" parent="Map"]
tile_set = ExtResource( 3 )
collision_layer = 3
collision_mask = 3
format = 1
tile_data = PoolIntArray( 65538, 0, 0, 131072, 0, 8, 131073, 0, 10, 131074, 0, 9, 131075, 0, 11, 131077, 0, 8, 131078, 0, 10, 131079, 0, 11, 196608, 0, 196616, 196609, 0, 131077, 196610, 0, 131081, 196611, 0, 65547, 196612, 0, 196610, 196613, 0, 131080, 196614, 0, 131081, 196615, 0, 65547, 196616, 0, 196610, 196617, 0, 196611, 262145, 0, 65544, 262146, 0, 131081, 262147, 0, 131083, 262149, 0, 196616, 262150, 0, 131077, 262151, 0, 131083, 327680, 0, 196609, 327681, 0, 131080, 327682, 0, 131081, 327683, 0, 131083, 327686, 0, 131076, 327687, 0, 196614, 327688, 0, 196611, 393217, 0, 196616, 393218, 0, 196618, 393219, 0, 196614, 393220, 0, 196611, 393222, 0, 65536, 458754, 0, 131072, 458758, 0, 131073, 458759, 0, 196610, 458760, 0, 196611 )

[node name="RouteGenerator" type="Node" parent="Map"]
script = ExtResource( 11 )

[node name="Timer" type="Timer" parent="Map/RouteGenerator"]
wait_time = 0.5

[node name="DisableTimer" type="Timer" parent="Map/RouteGenerator"]
one_shot = true

[node name="RoomPicker" type="Node" parent="Map"]
script = ExtResource( 13 )

[node name="PlayerProgression" type="Node" parent="Map"]
script = ExtResource( 12 )

[node name="Edges" type="Node" parent="Map"]
script = ExtResource( 14 )

[node name="SlopePainter" type="Node" parent="Map"]
script = ExtResource( 15 )

[node name="MaskPainter" type="Node" parent="Map"]
script = ExtResource( 8 )

[node name="TilemapTexture" type="Viewport" parent="Map/MaskPainter"]
size = Vector2( 3200, 2400 )
transparent_bg = true
render_target_v_flip = true
render_target_update_mode = 3

[node name="TileMapCopy" type="TileMap" parent="Map/MaskPainter/TilemapTexture"]
modulate = Color( 0, 0, 0, 1 )
tile_set = ExtResource( 3 )
collision_layer = 3
collision_mask = 3
format = 1
tile_data = PoolIntArray( -1, 0, 0, -65536, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 7, 0, 0, 8, 0, 0, 9, 0, 0, 10, 0, 0, 11, 0, 0, 12, 0, 0, 13, 0, 0, 14, 0, 0, 15, 0, 0, 65536, 0, 0, 65537, 0, 0, 65538, 0, 0, 65539, 0, 0, 65540, 0, 0, 65541, 0, 0, 65542, 0, 0, 65543, 0, 0, 65544, 0, 0, 65545, 0, 0, 65546, 0, 0, 65547, 0, 0, 65548, 0, 0, 65549, 0, 0, 65550, 0, 0, 65551, 0, 0, 131072, 0, 0, 131073, 0, 0, 131074, 0, 0, 131075, 0, 0, 131076, 0, 0, 131077, 0, 0, 131078, 0, 0, 131079, 0, 0, 131080, 0, 0, 131081, 0, 0, 131082, 0, 0, 131083, 0, 0, 131084, 0, 0, 131085, 0, 0, 131086, 0, 0, 131087, 0, 0, 196608, 0, 0, 196609, 0, 0, 196610, 0, 0, 196611, 0, 0, 196612, 0, 0, 196613, 0, 0, 196614, 0, 0, 196615, 0, 0, 196616, 0, 0, 196617, 0, 0, 196618, 0, 0, 196619, 0, 0, 196620, 0, 0, 196621, 0, 0, 196622, 0, 0, 196623, 0, 0, 262144, 0, 0, 262145, 0, 0, 262146, 0, 0, 262147, 0, 0, 262148, 0, 0, 262149, 0, 0, 262150, 0, 0, 262151, 0, 0, 262155, 0, 0, 262156, 0, 0, 262157, 0, 0, 262158, 0, 0, 262159, 0, 0, 327682, 0, 0, 327688, 0, 0, 327689, 0, 0, 327690, 0, 0, 327691, 0, 0, 327693, 0, 0, 327694, 0, 0, 327695, 0, 0, 393217, 0, 0, 393219, 0, 0, 393220, 0, 0, 393221, 0, 0, 393222, 0, 0, 393223, 0, 0, 458753, 0, 0, 458757, 0, 0, 458758, 0, 0, 524289, 0, 0, 524290, 0, 0, 524291, 0, 0, 524292, 0, 0 )

[node name="Sprite" type="Sprite" parent="Map/MaskPainter"]
material = SubResource( 2 )
position = Vector2( 0, 1 )
centered = false

[node name="SpecialElements" type="Node2D" parent="Map"]
script = ExtResource( 17 )

[node name="DynamicTutorial" type="Node" parent="Map"]
script = ExtResource( 19 )

[node name="BGLayer" type="Node2D" parent="Map"]

[node name="LockModuleLayer" type="Node2D" parent="Map"]

[node name="PlayerManager" type="Node" parent="."]
script = ExtResource( 7 )

[node name="OrderTimer" type="Timer" parent="PlayerManager"]
wait_time = 0.5
autostart = true

[node name="Feedback" parent="." instance=ExtResource( 9 )]

[node name="Particles" parent="." instance=ExtResource( 18 )]

[node name="Slicer" type="Node2D" parent="."]
script = ExtResource( 2 )

[node name="SoloMode" type="Node2D" parent="."]
script = ExtResource( 20 )

[node name="Timer" type="Timer" parent="SoloMode"]
one_shot = true

[node name="DisableTimer" type="Timer" parent="SoloMode"]
one_shot = true

[node name="FogOfWar" type="CanvasLayer" parent="."]
script = ExtResource( 10 )

[node name="ColorRect" type="ColorRect" parent="FogOfWar"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LookAhead" type="Node2D" parent="FogOfWar"]

[node name="GUI" type="CanvasLayer" parent="."]

[node name="PauseMenu" type="CanvasLayer" parent="."]
pause_mode = 2
script = ExtResource( 22 )

[node name="Control" type="Control" parent="PauseMenu"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="PauseMenu/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0 )

[node name="Container" type="Node2D" parent="PauseMenu"]
scale = Vector2( 1e-05, 1e-05 )

[node name="Sprite" type="Sprite" parent="PauseMenu/Container"]
texture = ExtResource( 21 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="PauseMenu"]
anims/MenuReveal = SubResource( 11 )
anims/RESET = SubResource( 12 )

[node name="GameOverLossVisuals" type="CanvasLayer" parent="."]
pause_mode = 2
script = ExtResource( 24 )

[node name="Control" type="Control" parent="GameOverLossVisuals"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="GameOverLossVisuals/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0 )

[node name="Container" type="Node2D" parent="GameOverLossVisuals"]
scale = Vector2( 1e-05, 1e-05 )

[node name="Sprite" type="Sprite" parent="GameOverLossVisuals/Container"]
texture = ExtResource( 26 )

[node name="Label" type="Label" parent="GameOverLossVisuals/Container"]
margin_left = -188.0
margin_top = -77.0
margin_right = 183.0
margin_bottom = 26.0
custom_colors/font_color = Color( 0.356863, 0.0705882, 0.239216, 1 )
custom_fonts/font = SubResource( 15 )
text = "Hmm?"
valign = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="GameOverLossVisuals"]
anims/MenuReveal = SubResource( 13 )
anims/RESET = SubResource( 14 )

[connection signal="timeout" from="Map/RouteGenerator/Timer" to="Map/RouteGenerator" method="_on_Timer_timeout"]
[connection signal="timeout" from="Map/RouteGenerator/DisableTimer" to="Map/RouteGenerator" method="_on_DisableTimer_timeout"]
[connection signal="timeout" from="PlayerManager/OrderTimer" to="PlayerManager" method="_on_OrderTimer_timeout"]
[connection signal="timeout" from="SoloMode/Timer" to="SoloMode" method="_on_Timer_timeout"]
[connection signal="timeout" from="SoloMode/DisableTimer" to="SoloMode" method="_on_DisableTimer_timeout"]
[connection signal="animation_finished" from="PauseMenu/AnimationPlayer" to="PauseMenu" method="_on_AnimationPlayer_animation_finished"]
